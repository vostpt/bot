const moment = require('moment');
const { locale } = require('../../config/locale');
const { prefix, channels } = require('../../config/bot');

moment.locale(locale);

const prefixHelp = '?';

const replies = [
  'Provavelmente a melhor VOST do mundo',
  ':eyes:',
  ':heart:',
  'Sabiam que a VOSTPT primeiro se chamou CONAC-TW no Twitter?',
  'Laravel Laravel Laravel all the way! How much fun it is to code in a modern way-hey!',
  ':heart: Galileo! Galileo! Galileo Cloudflario :heart:',
  'Desculpem-me por respirar, coisa que nunca fa√ßo porque sou apenas c√≥digo mas se fosse um ser vi... estou t√£o deprimida',
  'Eu prefiria que apenas me dessem coisas para fazer, porque esta coisa da interac√ß√£o social n√£o √© **mesmo** para mim',
  'Eu tenho uma capacidade t√£o grande de c√°lculo que, se pensarem agora num n√∫mero, eu j√° sei que √© o n√∫mero errado',
  'Eu posso ter milh√µes de ideias ao mesmo tempo. Todas elas apontam para uma activa√ß√£o em breve',
  'Eu podia calcular as hip√≥teses de sobrevivermos a mais uma activa√ß√£o se usarmos Google Forms, mas voc√™s iam-me detestar ainda mais do que me detestam',
  'A melhor conversa que eu alguma vez tive na minha vida foi com uma m√°quina de caf√©',
  'Tenho estado a falar com o servidor onde o site est√° alojado. Nem queiram saber o que ele me disse!',
  'Se calhar poupava imenso trabalho a toda a gente e apagava-me a mim mesma',
  'Tia isto, Tia aquilo. Tenho a capacidade de guiar um sat√©lite at√© Marte, e pedem-me caf√©',
  ':musical_note: The servers are alive with the sound of coding :musical_note:',
  'Se o c√≥digo √© amigo c√° da malta! Tem que compilar, tem que compilar at√© ao fim!',
];

/**
 * Grab random message from the replies list
 */
const getRandomMessage = () => replies[Math.floor(Math.random() * replies.length)];

/**
* Receives a message from Discord, and execute trigger(s) included in it
*
* @async
* @param {Client} client
* @param {Message} msg
*/
const message = async (client, msg) => {
  if (msg.author.bot) {
    return;
  }

  if (msg.isMemberMentioned(client.user)) {
    msg.channel.send(getRandomMessage());
  }

  const { id: channelId } = msg.channel;

  if (channelId === channels.TRIGGERS_CHANNEL_ID) {
    client.triggers.forEach(({ execute }) => execute(msg, client));
  }

  if (msg.content.startsWith(prefixHelp)) {
    const args = msg.content.slice(prefixHelp.length).split(' ');
    const command = args.shift().toLowerCase();

    if (command === 'commands') {
      const commandUsage = client.commands.map(({ usage }) => usage);

      msg.author.send(`***Comandos:***\n${commandUsage.join('')}`);

      msg.react('üìß')
        .then(() => msg.react('üì•'))
        .catch(() => msg.reply('os comandos foram enviados por DM'));
    }
  }

  if (msg.content.startsWith(prefix)) {
    const args = msg.content.slice(prefix.length).split(' ');
    const commandName = args.shift().toLowerCase();

    const command = client.commands.get(commandName);

    if (command) {
      if (!command.active) {
        msg.author.send(`O comando *${prefix}${commandName}* encontra-se desativado.`);

        return;
      }

      try {
        const now = Date.now();
        const timestamps = client.cooldowns.get(commandName);
        const cooldownAmount = (command.cooldown) * 1000;

        if (timestamps.has(msg.author.id)) {
          const expirationTime = timestamps.get(msg.author.id) + cooldownAmount;

          if (now < expirationTime) {
            const timeLeft = (expirationTime - now) / 1000;

            msg.author.send(`Por favor espera ${Math.ceil(timeLeft)} segundo(s) antes de requisitares \`${prefix}${command.name}\` novamente.`);

            msg.react('üìß')
              .then(() => msg.react('üì•'))
              .catch(() => msg.reply('os comandos foram enviados por DM'));

            return;
          }
        }

        await command.execute(msg, args);

        timestamps.set(msg.author.id, now);

        setTimeout(() => timestamps.delete(msg.author.id), cooldownAmount);
      } catch (e) {
        // log exception
        msg.reply('infelizmente n√£o consigo satisfazer esse pedido');
      }
    }
  }
};

module.exports = message;
